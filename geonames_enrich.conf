input {
  file {
    path => "c:/apps/logstash/prototype.log"
    codec => json
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "prototype_data"
  }
}

filter {
  if [type] == "prototype_data" {
    if [state_code]{
        mutate {
            add_field => { 
                "equerycity" => "@%{city_name}@" 
                "equerystate" => "@%{state_code}@"
                "equerycountry" => "@%{country_code}@"
            }
        }
        mutate{
            gsub => [
                "equerycity", "@", '"',
                "equerystate", "@", '"',
                "equerycountry", "@", '"'
            ]
        }
    
        elasticsearch {
            query => "country_code:%{equerycountry} AND admin1_code:%{equerystate} AND name:%{equerycity}"   
            fields => ["latitude", "lat", "longitude", "long", "geonameid", "geoid"]
            add_tag => ["geo_found"]
            sort => ""
        }
        
        mutate {
            remove_field => [ "equerycity", "equerystate", "equerycountry" ]
        }
    }
  }
}

output {  
  if [type] == "prototype_data" {
    elasticsearch {
      host => localhost
      protocol => "http"
    }
    if "geo_found" not in [tags] {
      file {
          flush_interval => 0
          path => "c:/apps/logstash/proto_fail.log"
      }    
    }
  }
}


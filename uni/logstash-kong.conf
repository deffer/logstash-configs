input {
	beats {
		#Used for filebeat input
		port => 5044
	}
	tcp {
		port => 5000
		type => syslog
	}
	lumberjack {
		port => 11312
		codec => "json"
		ssl_certificate => "/etc/logstash/elkhostnameprd01.crt"
		ssl_key => "/etc/logstash/elkhostnameprd01.key"
	}

}


## Add your filters / logstash plugins configuration here
filter {
	

	## 2017-08-16 Add initial host_env 
	if ![host_env] {
		mutate {
			add_field => {"host_env" => "prd"} 
		}
	}
	if [type] == "syslog" {
		grok {
			#match => { "message" => "(?m)%{SYSLOG5424LINE}" }
			match => { "message" => "%{SYSLOG5424PRI}%{NONNEGINT:version} +(?:%{TIMESTAMP_ISO8601:loggedtime}|-) +(?:%{HOSTNAME:pod}|-) +(?:%{NOTSPACE:app_name}|-) +(?:%{NOTSPACE:syslog5424_proc}|-) +(?:%{WORD:syslog5424_msgid}|-) +(?:%{SYSLOG5424SD:syslog5424_sd}|-|) +%{GREEDYDATA:message}" }
			overwrite => [ "message" ]
		}
		syslog_pri {
			syslog_pri_field_name => "syslog5424_pri"
		}
		kv {
			source => "syslog5424_sd"
			remove_field => [ "syslog5424_sd" ] # Delete the field afterwards
		}
		if [hostip] != "0.0.0.0" {
			if [source_type] == "kong-admin" or [source_type] == "kong-access"{
				mutate {
					replace => { "host" => "%{hostip}" }
				}
				dns {
					action => "replace"
					reverse => ["host"]
				}
			}
		}
		mutate {
			replace => { "host_parsed" => "%{node_name}" }
			replace => { "facility" => "%{syslog_facility}" }
			replace => { "severity" => "%{syslog_severity}" }
			replace => { "severity_code" => "%{syslog_severity_code}" }
			split => ["host_parsed" , "."]
			add_field => ["host_temp", "%{[host_parsed][0]}" ]
			remove_field => [ "port", "host_parsed", "syslog5424_pri", "version", "syslog_message", "syslog_timestamp", "syslog5424_proc", "syslog_severity_code", "syslog_facility_code", "syslog_facility", "syslog_severity"]
			gsub => [
				"message", "#012", "
",
				"message", "#011", "      "
			]
		}
		if [source_type] == "kong-admin" or [source_type] == "kong-access"{
			mutate {
				remove_field => ["app_name", "pod","loggedtime","facility","severity","severity_code"]
			}
		}
	} 
	if [source_type] == "kong-admin" or [source_type] == "kong-access"{
		grok {
		  patterns_dir => "./patterns"
		  break_on_match => false		  
		  match => [ "message", "%{IPORHOST:clientip} - - \[%{HTTPDATE:logtime}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:responsecode} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent}"]
		  overwrite => [ "host" ]
		  match => [ "host", "%{WORD:host}"]
		  match => [ "request", "%{URIPATH:apipath}(?:%{URIPARAM:apiparams})?"]
		  match => [ "apipath", "/(?<kong-api-prefix>[^/]*)"]
		  match => [ "apipath", "/%{GREEDYDATA:health-api-name}/health/?$"]
		}
		
		if [source_type] == "kong-access" and [verb] == "GET"{
			if [request] in ["/ping/kong","/ping/apibox","/ping/apibox1", "/ping/apibox2", "/ping/apibox3", "/status/apibox","/status/apibox1","/status/apibox2","/status/apibox3", "/status/cluster",
			"/echo-kong-version", "/mockbin/request", "/meta/v1/healthEndpoints"]
			or [health-api-name]{
				mutate {
					replace => { "source_type" => "gw-apis-health" }
					replace => { "message" => "%{request}" }
				}
			}
		}
		
		mutate{			
			remove_field => [ "source",  "[beat][version]" ]
		}		
		if [response_time_ms] {
			mutate{			
				convert => {"response_time_ms" => "integer"}
			}
		}

		## 2017-08-16 Add host_env for gw_env 
		if [gw_env] in ["dev","tst"] {
			mutate { replace => {"host_env" => "tst"} } 
		}
		
		date {
		  locale => "en"
		  match => [ "logtime" , "dd/MMM/yyyy:HH:mm:ss Z" ]
		}

		metrics {
			#meter => "http_%{clientip}_%{responsecode}" # Dots could be an issue
			meter => "http_%{gw_env}_%{kong-api-prefix}_%{responsecode}"
			add_tag => "http_metric"
		}
	}
	
	mutate{
		strip => ["thread"]
		remove_field => [ "type",  "node_name", "host_temp", "[beat][name]", "[beat][hostname]" ]
		remove_tag => [ "beats_input_codec_plain_applied" ]
	}

}

output {
	if "http_metric" in [tags] {
		graphite {
			host => "130.N.N.N"
			metrics_format => "events.*"
			include_metrics => [ "http_*" ]
			fields_are_metrics => true
		}
	} else {
		if [host_env] == "tst" {
			elasticsearch {
				hosts => ["localhost:9200"]
				index => "log-tst-%{+YYYY.MM.dd}"
			}
		}else{
			elasticsearch {
				hosts => ["localhost:9200"]
				index => "logstash-%{+YYYY.MM.dd}"
			}
		}

		## syslog {
		##  	host => "loghost"
		##  	port => 514
		##  	protocol => "tcp"
		## }

		if "throttled" not in [tags] {
			if [source_type] == "gw-apis-health"  or [severity] == "alert" or [message] =~ /^SEVERE/ {

				lumberjack {
					hosts => ["130.N.N.N"]

					# this is forwarding logs to influxhost
					port => 11312
					codec => "json"
					ssl_certificate => "/etc/logstash/influxhost.crt"
				}

			} 
		} 
	} 
}

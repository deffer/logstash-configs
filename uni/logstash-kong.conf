input {

	beats {
		#Used for filebeat input
		port => 5044
	}
	tcp {
		port => 5000
	}
}


## Add your filters / logstash plugins configuration here
filter {
	
	mutate {
		add_tag => ["api-ZWM0MDVmMjFiNjI2" , "uoa_env_test"]
	}

	if [source_type] == "kong-admin" or [source_type] == "kong-access"{
		grok {
		  patterns_dir => "./patterns"
		  break_on_match => false		  
		  match => [ "message", "%{IPORHOST:clientip} - - \[%{HTTPDATE:logtime}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:responsecode} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent}"]
		  overwrite => [ "host" ]
		  match => [ "host", "%{WORD:host}"]
		  match => [ "request", "%{URIPATH:apipath}(?:%{URIPARAM:apiparams})?"]
		  match => [ "apipath", "/(?<kong-api-prefix>[^/]*)"]
		  match => [ "apipath", "/%{GREEDYDATA:health-api-name}/health/?$"]
		}
		
		if [source_type] == "kong-access" and [verb] == "GET"{
			if [request] in ["/ping/kong","/ping/apibox","/ping/apibox1", "/ping/apibox2", "/ping/apibox3", "/status/apibox","/status/apibox1","/status/apibox2","/status/apibox3", "/status/cluster",
			"/echo-kong-version", "/mockbin/request", "/meta/v1/healthEndpoints"]
			or [health-api-name]{
				mutate {
					replace => { "source_type" => "gw-apis-health" }
					replace => { "message" => "%{request}" }
				}
			}
		}
		
		mutate{			
			remove_field => [ "source",  "[beat][version]" ]
		}		
		
		date {
		  locale => "en"
		  match => [ "logtime" , "dd/MMM/yyyy:HH:mm:ss Z" ]
		}
	}else{
		# [course_type]=="java_api"
		grok {
		  patterns_dir => "./patterns"
		  break_on_match => false
		  match => [ "message",  "%{TIMESTAMP_ISO8601:loggedtime}\s+%{LOGLEVEL:level} %{NUMBER:magicnumber} --- \[%{DATA:thread}\] %{DATA:class}\s+: %{GREEDYDATA:message}" ]
		  overwrite => [ "message", "host" ]
		  match => [ "source", "%{GREEDYDATA}/(?<api_name>[^/]+)/%{GREEDYDATA:filename}.log" ]
		  match => [ "host", "%{WORD:host}"]
		}

		grok {
		  match => [ "message", "Metrics\:(?<metric_type>(?:Latency|Cache)), *system=%{USERNAME:metric_system}, *requestId=%{USERNAME:metric_request}, *(?<metric_name>(?:totalTime|startTime|finishTime))=%{NUMBER:metric_value}, *correlationId=%{NUMBER:correlationId}" ]
		}

		# WARNING. only works if logstash has date and timezone set correctly
		date {
		  match => [ "loggedtime", "ISO8601" ]
		}

		if [metric_type] == "Latency" {
		  mutate {
			add_tag => ["app_metric"]
			convert => {"metric_value" => "integer"}
		  }
		}
	}
	
	
	mutate{
		strip => ["thread"]
		remove_field => [ "type",  "node_name", "host_temp", "[beat][name]", "[beat][hostname]" ]
		remove_tag => [ "beats_input_codec_plain_applied" ]
	}

}

output {
	elasticsearch {
		hosts => ["elasticsearch:9200"]
	}

	lumberjack {
		hosts => ["130.216.159.158"]
		# this is forwarding logs to logs-dr.auckland.ac.nz
		port => 11312
		codec => "json"
		ssl_certificate => "/etc/logstash/conf.d/logstash-lumberjack-uoa-dr.pub"
	}
}


input {
	beats {
		#Used for filebeat input
		port => 5044
	}
	
	lumberjack {
		port => 11312
		codec => "json"
		ssl_certificate => "/etc/logstash/elkhostnameprd01.crt"
		ssl_key => "/etc/logstash/elkhostnameprd01.key"
	}

}


## Add your filters / logstash plugins configuration here
filter {
	
	## mutate {
	## 	## Only needed for ITS Elk
	## 	## add_tag => ["api-NjI2d5HGRe65" , "uoa_env_test"]
	## 	
	## }
	## 2017-08-16 Add initial host_env 
	if ![host_env] {
		mutate {
			add_field => {"host_env" => "prd"} 
		}
	}
	
	
	grok {
	  patterns_dir => "./patterns"
	  break_on_match => false
	  match => [ "message",  "%{TIMESTAMP_ISO8601:loggedtime}\s+%{LOGLEVEL:level} %{NUMBER:magicnumber} --- \[%{DATA:thread}\] %{DATA:class}\s+: %{GREEDYDATA:message}" ]
	  overwrite => [ "message", "host" ]
	  match => [ "source", "%{GREEDYDATA}/(?<api_name>[^/]+)/%{GREEDYDATA:filename}.log" ]
	  match => [ "host", "%{WORD:host}"]
	}

	grok {
	  match => [ "message", "Metrics\:(?<metric_type>(?:Latency|Cache)), *system=%{USERNAME:metric_system}, *requestId=%{USERNAME:metric_request}, *(?<metric_name>(?:totalTime|startTime|finishTime))=%{NUMBER:metric_value}, *correlationId=%{NUMBER:correlationId}" ]
	}

	grok {
		match => [ "message", "Metrics\=%{USERNAME:metrics_measure_subj} *%{GREEDYDATA:metrics_kv_to_parse}" ]
	}

	
	 
	kv {
	  source => "metrics_kv_to_parse"
	}
	

	if [metrics_measure_subj] {
		mutate {
			add_tag => ["app_metrics"]
			convert => {"metricValue" => "integer"}
		}
	}


	# WARNING. only works if logstash has date and timezone set correctly
	date {
	  match => [ "loggedtime", "ISO8601" ]
	}

	if [metric_type] == "Latency" {
	  mutate {
		add_tag => ["app_metric"]
		convert => {"metric_value" => "integer"}
	  }
	}
	## 2017-08-16 Add host_env for api_env 
	if [api_env] in ["dev","tst"] {
		mutate { replace => {"host_env" => "tst"} } 
	}
	## 2017-10-12 Add host_env for env_name 
	if [env_name] in ["dev","tst"] {
		mutate { replace => {"host_env" => "tst"} } 
	}

	
	
	mutate{
		strip => ["thread"]
		remove_field => [ "type",  "node_name", "host_temp", "[beat][name]", "[beat][hostname]" ]
		remove_tag => [ "beats_input_codec_plain_applied" ]
	}
	
	if [message] =~ /^SEVERE/ {
			if [message] =~ /^SEVERE HIGH/ {
					throttle {
							before_count => 3
							after_count => 5
							period => 3600
							max_age => 7200
							key => "%{app_name}%{api_name}:SEVERE HIGH"
							add_tag => "throttled"
					}
			}
			else if [message] =~ /^SEVERE MEDIUM/ {
					throttle {
							before_count => 3
							after_count => 5
							period => 3600
							max_age => 7200
							key => "%{app_name}%{api_name}:SEVERE MEDIUM"
							add_tag => "throttled"
					}
			}
			else if [message] =~ /^SEVERE LOW/ {
					throttle {
							before_count => 3
							after_count => 5
							period => 3600
							max_age => 7200
							key => "%{app_name}%{api_name}:SEVERE LOW"
							add_tag => "throttled"
					}
			} else {
					throttle {
							before_count => 3
							after_count => 5
							period => 3600
							max_age => 7200
							key => "%{app_name}%{api_name}:SEVERE"
							add_tag => "throttled"
					}
			}
	}

}

output {

	if [host_env] == "tst" {
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "log-tst-%{+YYYY.MM.dd}"
		}
	}else{
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "logstash-%{+YYYY.MM.dd}"
		}
	}
}
